apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: amaka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: strapi-frontend
  template:
    metadata:
      labels:
        app: strapi-frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      containers:
        - name: strapi-frontend
          image: mogobanyamwaro/strapi-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "512Mi"
              cpu: "1000m"
            limits:
              memory: "1024Mi"
              cpu: "2000m"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: strapi-frontend-service
  namespace: amaka
spec:
  selector:
    app: strapi-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: strapi-frontend-ingress
  namespace: amaka
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
    - host: strapi-frontend.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: strapi-frontend-service
                port:
                  number: 80

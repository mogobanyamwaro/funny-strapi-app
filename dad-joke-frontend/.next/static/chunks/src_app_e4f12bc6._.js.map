{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/douglas/Documents/my%20projects/dad-joke-frontend/src/app/components/ChatWindow.tsx"],"sourcesContent":["// components/ChatWindow.tsx\nimport React, { useState, useEffect } from \"react\";\n\ninterface ChatWindowProps {\n  answer: string;\n  loading: boolean;\n}\n\nconst ChatWindow: React.FC<ChatWindowProps> = ({ answer, loading }) => {\n  const [displayedText, setDisplayedText] = useState(\"\");\n\n  useEffect(() => {\n    let index = 0;\n    setDisplayedText(\"\");\n    if (answer) {\n      const timer = setInterval(() => {\n        setDisplayedText((prev) => prev + answer.charAt(index));\n        index++;\n        if (index >= answer.length) {\n          clearInterval(timer);\n        }\n      }, 50); // adjust speed as needed\n      return () => clearInterval(timer);\n    }\n  }, [answer]);\n\n  return (\n    <div className=\"flex-1 p-4 border border-gray-300 rounded overflow-y-auto\">\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <p className=\"whitespace-pre-wrap\">{displayedText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;;;;AAOA,MAAM,aAAwC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE;;IAChE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI,QAAQ;YACZ,iBAAiB;YACjB,IAAI,QAAQ;gBACV,MAAM,QAAQ;kDAAY;wBACxB;0DAAiB,CAAC,OAAS,OAAO,OAAO,MAAM,CAAC;;wBAChD;wBACA,IAAI,SAAS,OAAO,MAAM,EAAE;4BAC1B,cAAc;wBAChB;oBACF;iDAAG,KAAK,yBAAyB;gBACjC;4CAAO,IAAM,cAAc;;YAC7B;QACF;+BAAG;QAAC;KAAO;IAEX,qBACE,6LAAC;QAAI,WAAU;kBACZ,wBACC,6LAAC;sBAAI;;;;;iCAEL,6LAAC;YAAE,WAAU;sBAAuB;;;;;;;;;;;AAI5C;GA3BM;KAAA;uCA6BS","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/douglas/Documents/my%20projects/dad-joke-frontend/src/app/components/Sidebar.tsx"],"sourcesContent":["// components/Sidebar.tsx\nimport React from \"react\";\nimport { ChatMessage } from \"../types\";\n\ninterface SidebarProps {\n  messages: ChatMessage[];\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ messages }) => {\n  return (\n    <div className=\"w-64 border-r border-gray-300 p-4 overflow-y-auto\">\n      <h2 className=\"text-xl font-bold mb-4\">Previous Questions</h2>\n      {messages.map((message) => (\n        <div\n          key={message.id}\n          className=\"mb-2 p-2 border border-gray-200 rounded\"\n        >\n          <p className=\"text-sm\">{message.question}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;AAQzB,MAAM,UAAkC,CAAC,EAAE,QAAQ,EAAE;IACnD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAyB;;;;;;YACtC,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;oBAEC,WAAU;8BAEV,cAAA,6LAAC;wBAAE,WAAU;kCAAW,QAAQ,QAAQ;;;;;;mBAHnC,QAAQ,EAAE;;;;;;;;;;;AAQzB;KAdM;uCAgBS","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/douglas/Documents/my%20projects/dad-joke-frontend/src/app/hooks/axiosInstance.ts"],"sourcesContent":["// axiosInstance.ts\nimport axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:1337/api\", // Set your base URL here\n});\n\nexport default axiosInstance;\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;AACnB;;AAEA,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS;AACX;uCAEe","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/douglas/Documents/my%20projects/dad-joke-frontend/src/app/components/ThoughtGenerator.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport axiosInstance from \"@/app/hooks/axiosInstance\";\n\nexport default function ShowerThoughts() {\n  const [thought, setThought] = useState<string>(\"Loading...\");\n\n  const fetchThought = async () => {\n    const res = await axiosInstance.get(\"/thoughts?random=true\");\n    console.log(res?.data?.data);\n    setThought(res.data?.data?.[0]?.text);\n  };\n  console.log(\"thought\", thought);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-6\">\n      <h1 className=\"text-3xl font-bold mb-4\">ðŸ’­ Shower Thought</h1>\n      <div className=\"bg-gray-800 p-6 rounded-lg shadow-md w-3/4 text-center\">\n        <p className=\"text-lg italic\">{thought}</p>\n      </div>\n      <button\n        onClick={fetchThought}\n        className=\"mt-4 px-4 py-2 bg-blue-500 rounded-lg text-white\"\n      >\n        Get Another Thought\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAEe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE/C,MAAM,eAAe;QACnB,MAAM,MAAM,MAAM,uIAAA,CAAA,UAAa,CAAC,GAAG,CAAC;QACpC,QAAQ,GAAG,CAAC,KAAK,MAAM;QACvB,WAAW,IAAI,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;IAClC;IACA,QAAQ,GAAG,CAAC,WAAW;IAEvB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAU;8BAAkB;;;;;;;;;;;0BAEjC,6LAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;;;;;;;AAKP;GAxBwB;KAAA","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/douglas/Documents/my%20projects/dad-joke-frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport ChatWindow from \"@/app/components/ChatWindow\";\nimport Sidebar from \"@/app/components/Sidebar\";\nimport ShowerThoughts from \"@/app/components/ThoughtGenerator\";\nimport { ChatMessage } from \"@/app/types\";\nimport { useState } from \"react\";\n\nexport default function Home() {\n  // The messages array mocks the backend data\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [currentImage, setCurrentImage] = useState<string | null>(null);\n  const [currentAnswer, setCurrentAnswer] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Simulate sending a message and receiving an answer\n  const handleSend = () => {\n    if (!currentQuestion.trim() && !currentImage) return;\n\n    // Create a new message object\n    const newMessage: ChatMessage = {\n      id: Date.now(),\n      question: currentQuestion,\n      answer: \"\",\n      image: currentImage || undefined,\n    };\n\n    // Add to messages (prepend for sidebar order)\n    setMessages([newMessage, ...messages]);\n\n    // Clear input fields\n    setCurrentQuestion(\"\");\n    setCurrentImage(null);\n    setCurrentAnswer(\"\");\n\n    // Simulate API delay and answer generation\n    setLoading(true);\n    const simulatedAnswer = `This is a simulated answer to: \"${newMessage.question}\"`;\n    setTimeout(() => {\n      newMessage.answer = simulatedAnswer;\n      // Update the messages array with the answer\n      setMessages((prev) =>\n        prev.map((msg) => (msg.id === newMessage.id ? newMessage : msg))\n      );\n      setLoading(false);\n      // Set the answer for typewriter animation\n      setCurrentAnswer(simulatedAnswer);\n    }, 1000);\n  };\n  return <ShowerThoughts />;\n\n  return (\n    <div className=\"flex h-screen\">\n      {/* Sidebar with previous questions */}\n      <Sidebar messages={messages} />\n\n      {/* Main Chat area */}\n      <div className=\"flex-1 flex flex-col p-4\">\n        {/* Chat window with typewriter effect */}\n        <ChatWindow answer={currentAnswer} loading={loading} />\n\n        {/* Input area */}\n        <div className=\"mt-4\">\n          <textarea\n            value={currentQuestion}\n            onChange={(e) => setCurrentQuestion(e.target.value)}\n            placeholder=\"Type your question here...\"\n            className=\"w-full p-2 border border-gray-300 rounded focus:outline-none\"\n          />\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => {\n              if (e.target.files && e.target.files[0]) {\n                // For mocking purposes, use a URL created from the file object.\n                setCurrentImage(URL.createObjectURL(e.target.files[0]));\n              }\n            }}\n            className=\"mt-2\"\n          />\n          <button\n            onClick={handleSend}\n            className=\"mt-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n          >\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;;;AALA;;;;;AAOe,SAAS;;IACtB,4CAA4C;IAC5C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAC1D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qDAAqD;IACrD,MAAM,aAAa;QACjB,IAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,cAAc;QAE9C,8BAA8B;QAC9B,MAAM,aAA0B;YAC9B,IAAI,KAAK,GAAG;YACZ,UAAU;YACV,QAAQ;YACR,OAAO,gBAAgB;QACzB;QAEA,8CAA8C;QAC9C,YAAY;YAAC;eAAe;SAAS;QAErC,qBAAqB;QACrB,mBAAmB;QACnB,gBAAgB;QAChB,iBAAiB;QAEjB,2CAA2C;QAC3C,WAAW;QACX,MAAM,kBAAkB,CAAC,gCAAgC,EAAE,WAAW,QAAQ,CAAC,CAAC,CAAC;QACjF,WAAW;YACT,WAAW,MAAM,GAAG;YACpB,4CAA4C;YAC5C,YAAY,CAAC,OACX,KAAK,GAAG,CAAC,CAAC,MAAS,IAAI,EAAE,KAAK,WAAW,EAAE,GAAG,aAAa;YAE7D,WAAW;YACX,0CAA0C;YAC1C,iBAAiB;QACnB,GAAG;IACL;IACA,qBAAO,6LAAC,gJAAA,CAAA,UAAc;;;;;;AAyCxB;GAnFwB;KAAA","debugId":null}}]
}